
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o LEDdianliang_impl1_vo.vo -w -neg -gui -msgset C:/FPGACode/promote.xml LEDdianliang_impl1.ncd 
// Netlist created on Tue May 01 20:11:56 2018
// Netlist written on Tue May 01 20:12:05 2018
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module LED ( key, sw, led );
  input  [3:0] key;
  input  [3:0] sw;
  output [7:0] led;
  wire   led_c_3_c, led_c_2_c, led_c_1_c, led_c_0_c, n2_c, n3_c, n4_c, n5_c, 
         VCCI;

  led_7_ \led[7]_I ( .PADDO(led_c_3_c), .led7(led[7]));
  led_6_ \led[6]_I ( .PADDO(led_c_2_c), .led6(led[6]));
  led_5_ \led[5]_I ( .PADDO(led_c_1_c), .led5(led[5]));
  led_4_ \led[4]_I ( .PADDO(led_c_0_c), .led4(led[4]));
  led_3_ \led[3]_I ( .PADDO(n2_c), .led3(led[3]));
  led_2_ \led[2]_I ( .PADDO(n3_c), .led2(led[2]));
  led_1_ \led[1]_I ( .PADDO(n4_c), .led1(led[1]));
  led_0_ \led[0]_I ( .PADDO(n5_c), .led0(led[0]));
  key_3_ \key[3]_I ( .PADDI(led_c_3_c), .key3(key[3]));
  key_2_ \key[2]_I ( .PADDI(led_c_2_c), .key2(key[2]));
  key_1_ \key[1]_I ( .PADDI(led_c_1_c), .key1(key[1]));
  key_0_ \key[0]_I ( .PADDI(led_c_0_c), .key0(key[0]));
  sw_3_ \sw[3]_I ( .PADDI(n2_c), .sw3(sw[3]));
  sw_2_ \sw[2]_I ( .PADDI(n3_c), .sw2(sw[2]));
  sw_1_ \sw[1]_I ( .PADDI(n4_c), .sw1(sw[1]));
  sw_0_ \sw[0]_I ( .PADDI(n5_c), .sw0(sw[0]));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module led_7_ ( input PADDO, output led7 );
  wire   GNDI;

  xo2iobuf led_pad_7( .I(PADDO), .T(GNDI), .PAD(led7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led7) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module led_6_ ( input PADDO, output led6 );
  wire   GNDI;

  xo2iobuf led_pad_6( .I(PADDO), .T(GNDI), .PAD(led6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led6) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_5_ ( input PADDO, output led5 );
  wire   GNDI;

  xo2iobuf led_pad_5( .I(PADDO), .T(GNDI), .PAD(led5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led5) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_4_ ( input PADDO, output led4 );
  wire   GNDI;

  xo2iobuf led_pad_4( .I(PADDO), .T(GNDI), .PAD(led4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led4) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_3_ ( input PADDO, output led3 );
  wire   GNDI;

  xo2iobuf led_pad_3( .I(PADDO), .T(GNDI), .PAD(led3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led3) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_2_ ( input PADDO, output led2 );
  wire   GNDI;

  xo2iobuf led_pad_2( .I(PADDO), .T(GNDI), .PAD(led2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led2) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_1_ ( input PADDO, output led1 );
  wire   GNDI;

  xo2iobuf led_pad_1( .I(PADDO), .T(GNDI), .PAD(led1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led1) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_0_ ( input PADDO, output led0 );
  wire   GNDI;

  xo2iobuf led_pad_0( .I(PADDO), .T(GNDI), .PAD(led0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led0) = (0:0:0,0:0:0);
  endspecify

endmodule

module key_3_ ( output PADDI, input key3 );

  xo2iobuf0001 led_c_3_pad( .Z(PADDI), .PAD(key3));

  specify
    (key3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key3, 0:0:0);
    $width (negedge key3, 0:0:0);
  endspecify

endmodule

module xo2iobuf0001 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module key_2_ ( output PADDI, input key2 );

  xo2iobuf0001 led_c_2_pad( .Z(PADDI), .PAD(key2));

  specify
    (key2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key2, 0:0:0);
    $width (negedge key2, 0:0:0);
  endspecify

endmodule

module key_1_ ( output PADDI, input key1 );

  xo2iobuf0001 led_c_1_pad( .Z(PADDI), .PAD(key1));

  specify
    (key1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key1, 0:0:0);
    $width (negedge key1, 0:0:0);
  endspecify

endmodule

module key_0_ ( output PADDI, input key0 );

  xo2iobuf0001 led_c_0_pad( .Z(PADDI), .PAD(key0));

  specify
    (key0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge key0, 0:0:0);
    $width (negedge key0, 0:0:0);
  endspecify

endmodule

module sw_3_ ( output PADDI, input sw3 );

  xo2iobuf0001 n2_pad( .Z(PADDI), .PAD(sw3));

  specify
    (sw3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge sw3, 0:0:0);
    $width (negedge sw3, 0:0:0);
  endspecify

endmodule

module sw_2_ ( output PADDI, input sw2 );

  xo2iobuf0001 n3_pad( .Z(PADDI), .PAD(sw2));

  specify
    (sw2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge sw2, 0:0:0);
    $width (negedge sw2, 0:0:0);
  endspecify

endmodule

module sw_1_ ( output PADDI, input sw1 );

  xo2iobuf0001 n4_pad( .Z(PADDI), .PAD(sw1));

  specify
    (sw1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge sw1, 0:0:0);
    $width (negedge sw1, 0:0:0);
  endspecify

endmodule

module sw_0_ ( output PADDI, input sw0 );

  xo2iobuf0001 n5_pad( .Z(PADDI), .PAD(sw0));

  specify
    (sw0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge sw0, 0:0:0);
    $width (negedge sw0, 0:0:0);
  endspecify

endmodule
